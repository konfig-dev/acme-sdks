/*
OpenAPI Petstore

This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package acme

import (
	"encoding/json"
)

// PaginateResponseEdgesNode struct for PaginateResponseEdgesNode
type PaginateResponseEdgesNode struct {
	Message *string `json:"message,omitempty"`
}

// NewPaginateResponseEdgesNode instantiates a new PaginateResponseEdgesNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginateResponseEdgesNode() *PaginateResponseEdgesNode {
	this := PaginateResponseEdgesNode{}
	return &this
}

// NewPaginateResponseEdgesNodeWithDefaults instantiates a new PaginateResponseEdgesNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginateResponseEdgesNodeWithDefaults() *PaginateResponseEdgesNode {
	this := PaginateResponseEdgesNode{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PaginateResponseEdgesNode) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginateResponseEdgesNode) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PaginateResponseEdgesNode) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *PaginateResponseEdgesNode) SetMessage(v string) {
	o.Message = &v
}

func (o PaginateResponseEdgesNode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullablePaginateResponseEdgesNode struct {
	value *PaginateResponseEdgesNode
	isSet bool
}

func (v NullablePaginateResponseEdgesNode) Get() *PaginateResponseEdgesNode {
	return v.value
}

func (v *NullablePaginateResponseEdgesNode) Set(val *PaginateResponseEdgesNode) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginateResponseEdgesNode) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginateResponseEdgesNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginateResponseEdgesNode(val *PaginateResponseEdgesNode) *NullablePaginateResponseEdgesNode {
	return &NullablePaginateResponseEdgesNode{value: val, isSet: true}
}

func (v NullablePaginateResponseEdgesNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginateResponseEdgesNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


