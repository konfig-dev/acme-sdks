/*
OpenAPI Petstore

This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package acme

import (
	"encoding/json"
)

// PaginateResponsePageInfo struct for PaginateResponsePageInfo
type PaginateResponsePageInfo struct {
	HasNextPage *bool `json:"hasNextPage,omitempty"`
	HasPreviousPage *bool `json:"hasPreviousPage,omitempty"`
	StartCursor *string `json:"startCursor,omitempty"`
	EndCursor *string `json:"endCursor,omitempty"`
}

// NewPaginateResponsePageInfo instantiates a new PaginateResponsePageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginateResponsePageInfo() *PaginateResponsePageInfo {
	this := PaginateResponsePageInfo{}
	return &this
}

// NewPaginateResponsePageInfoWithDefaults instantiates a new PaginateResponsePageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginateResponsePageInfoWithDefaults() *PaginateResponsePageInfo {
	this := PaginateResponsePageInfo{}
	return &this
}

// GetHasNextPage returns the HasNextPage field value if set, zero value otherwise.
func (o *PaginateResponsePageInfo) GetHasNextPage() bool {
	if o == nil || isNil(o.HasNextPage) {
		var ret bool
		return ret
	}
	return *o.HasNextPage
}

// GetHasNextPageOk returns a tuple with the HasNextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginateResponsePageInfo) GetHasNextPageOk() (*bool, bool) {
	if o == nil || isNil(o.HasNextPage) {
    return nil, false
	}
	return o.HasNextPage, true
}

// HasHasNextPage returns a boolean if a field has been set.
func (o *PaginateResponsePageInfo) HasHasNextPage() bool {
	if o != nil && !isNil(o.HasNextPage) {
		return true
	}

	return false
}

// SetHasNextPage gets a reference to the given bool and assigns it to the HasNextPage field.
func (o *PaginateResponsePageInfo) SetHasNextPage(v bool) {
	o.HasNextPage = &v
}

// GetHasPreviousPage returns the HasPreviousPage field value if set, zero value otherwise.
func (o *PaginateResponsePageInfo) GetHasPreviousPage() bool {
	if o == nil || isNil(o.HasPreviousPage) {
		var ret bool
		return ret
	}
	return *o.HasPreviousPage
}

// GetHasPreviousPageOk returns a tuple with the HasPreviousPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginateResponsePageInfo) GetHasPreviousPageOk() (*bool, bool) {
	if o == nil || isNil(o.HasPreviousPage) {
    return nil, false
	}
	return o.HasPreviousPage, true
}

// HasHasPreviousPage returns a boolean if a field has been set.
func (o *PaginateResponsePageInfo) HasHasPreviousPage() bool {
	if o != nil && !isNil(o.HasPreviousPage) {
		return true
	}

	return false
}

// SetHasPreviousPage gets a reference to the given bool and assigns it to the HasPreviousPage field.
func (o *PaginateResponsePageInfo) SetHasPreviousPage(v bool) {
	o.HasPreviousPage = &v
}

// GetStartCursor returns the StartCursor field value if set, zero value otherwise.
func (o *PaginateResponsePageInfo) GetStartCursor() string {
	if o == nil || isNil(o.StartCursor) {
		var ret string
		return ret
	}
	return *o.StartCursor
}

// GetStartCursorOk returns a tuple with the StartCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginateResponsePageInfo) GetStartCursorOk() (*string, bool) {
	if o == nil || isNil(o.StartCursor) {
    return nil, false
	}
	return o.StartCursor, true
}

// HasStartCursor returns a boolean if a field has been set.
func (o *PaginateResponsePageInfo) HasStartCursor() bool {
	if o != nil && !isNil(o.StartCursor) {
		return true
	}

	return false
}

// SetStartCursor gets a reference to the given string and assigns it to the StartCursor field.
func (o *PaginateResponsePageInfo) SetStartCursor(v string) {
	o.StartCursor = &v
}

// GetEndCursor returns the EndCursor field value if set, zero value otherwise.
func (o *PaginateResponsePageInfo) GetEndCursor() string {
	if o == nil || isNil(o.EndCursor) {
		var ret string
		return ret
	}
	return *o.EndCursor
}

// GetEndCursorOk returns a tuple with the EndCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginateResponsePageInfo) GetEndCursorOk() (*string, bool) {
	if o == nil || isNil(o.EndCursor) {
    return nil, false
	}
	return o.EndCursor, true
}

// HasEndCursor returns a boolean if a field has been set.
func (o *PaginateResponsePageInfo) HasEndCursor() bool {
	if o != nil && !isNil(o.EndCursor) {
		return true
	}

	return false
}

// SetEndCursor gets a reference to the given string and assigns it to the EndCursor field.
func (o *PaginateResponsePageInfo) SetEndCursor(v string) {
	o.EndCursor = &v
}

func (o PaginateResponsePageInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HasNextPage) {
		toSerialize["hasNextPage"] = o.HasNextPage
	}
	if !isNil(o.HasPreviousPage) {
		toSerialize["hasPreviousPage"] = o.HasPreviousPage
	}
	if !isNil(o.StartCursor) {
		toSerialize["startCursor"] = o.StartCursor
	}
	if !isNil(o.EndCursor) {
		toSerialize["endCursor"] = o.EndCursor
	}
	return json.Marshal(toSerialize)
}

type NullablePaginateResponsePageInfo struct {
	value *PaginateResponsePageInfo
	isSet bool
}

func (v NullablePaginateResponsePageInfo) Get() *PaginateResponsePageInfo {
	return v.value
}

func (v *NullablePaginateResponsePageInfo) Set(val *PaginateResponsePageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginateResponsePageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginateResponsePageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginateResponsePageInfo(val *PaginateResponsePageInfo) *NullablePaginateResponsePageInfo {
	return &NullablePaginateResponsePageInfo{value: val, isSet: true}
}

func (v NullablePaginateResponsePageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginateResponsePageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


