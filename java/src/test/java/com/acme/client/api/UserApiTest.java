/*
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.acme.client.api;

import com.acme.client.ApiException;
import java.time.OffsetDateTime;
import com.acme.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Disabled
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * Create user
     *
     * This can only be done by the logged in user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        User user = null;
        api.create(user);
        // TODO: test validations
    }

    /**
     * Creates list of users with given input array
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWithArrayTest() throws ApiException {
        List<User> user = null;
        api.createWithArray(user);
        // TODO: test validations
    }

    /**
     * Creates list of users with given input array
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWithListTest() throws ApiException {
        List<User> user = null;
        api.createWithList(user);
        // TODO: test validations
    }

    /**
     * Delete user
     *
     * This can only be done by the logged in user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        String username = null;
        api.delete(username);
        // TODO: test validations
    }

    /**
     * Get user by user name
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByNameTest() throws ApiException {
        String username = null;
        User response = api.getByName(username);
        // TODO: test validations
    }

    /**
     * Logs user into the system
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        String username = null;
        String password = null;
        String response = api.login(username, password);
        // TODO: test validations
    }

    /**
     * Logs out current logged in user session
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void logoutTest() throws ApiException {
        api.logout();
        // TODO: test validations
    }

    /**
     * Updated user
     *
     * This can only be done by the logged in user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        String username = null;
        User user = null;
        api.update(username, user);
        // TODO: test validations
    }

}
