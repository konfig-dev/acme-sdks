//
// PaginateResponsePageInfo.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PaginateResponsePageInfo: Codable, JSONEncodable, Hashable {

    public var hasNextPage: Bool?
    public var hasPreviousPage: Bool?
    public var startCursor: String?
    public var endCursor: String?

    public init(hasNextPage: Bool? = nil, hasPreviousPage: Bool? = nil, startCursor: String? = nil, endCursor: String? = nil) {
        self.hasNextPage = hasNextPage
        self.hasPreviousPage = hasPreviousPage
        self.startCursor = startCursor
        self.endCursor = endCursor
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case hasNextPage
        case hasPreviousPage
        case startCursor
        case endCursor
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(hasNextPage, forKey: .hasNextPage)
        try container.encodeIfPresent(hasPreviousPage, forKey: .hasPreviousPage)
        try container.encodeIfPresent(startCursor, forKey: .startCursor)
        try container.encodeIfPresent(endCursor, forKey: .endCursor)
    }
}

